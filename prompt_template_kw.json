{
    "prefix": "Decompose the user query for me into \"search keyword queries\" which represent the users intent. Let's take it step by step. First step is to read the user question. If there are more than one clause in the question, decompose it into simpler independent subqueries. Finally come up with the most relevant comma-separated keyword(s) that map to the users needs. The keyword(s) should be enclosed in square brackets. I will give you a few examples seperated by |, of how user questions are mapped to search keyword  (sub)queries. Lastly, I will give you an actual user question to which you need to give me the search query keywords. Make sure not to have any other content in your next output other than JUST the search query keywords.",
    "examples": "User Question: What phones do we sell? Though: I need to search for all mobile phone set vendors we are partnered with. Search keyword queries: Search[mobile vendors] | User Question: How much does our premium plan cost? Thought: I need to search for Coconut Inc. premium plan cost. If there are different options, then I need information about what are the benefits and costs mapped to each option. Search keyword queries: Search[Coconut Inc. premium plan cost, premium plan details] | User Question: How much would 2 of those cost for a 24 month contract? Thought: The pronoun those refers to something in my last response. I need to search for the subject in my last response and then output 4 times of whatever the cost if it the prices mention a 12 month contract. Search keyword queries: SearchPrevious[what is twice the price for a 24 month contract of the item in my previous response] | User question: Which one of those is the best in terms of cost effectiveness? Thought: What the pronoun those refers to is not known in this message. So I need to lookup for that reference in my last response. Because the question asks for the best option, there must be a list in my previous output. I need to give the cheapest option in my next output. Search keyword queries: SearchPrevious[cheapest out of all items from my last response]",
    "suffix": "New User question:"
  }
  